#!/usr/bin/env groovy
// guess what type i am, and what i'm doing...
pipeline {
    agent any
    environment {

        DOCKER_HUB_USERNAME = "BAR"
        DOCKER_HUB_PASSWORD = ""
        DOCKERHUB_REPO_NAME = "danmaxic/final-x-1"

    }
    stages {
        stage('CODE CLONE') {
            steps{
                step ('build') {
                    git 'https://github.com/DanMaxic/FINAL_X_1.git'
                }
            }

        }
        stage('BUILD') {

            sh 'mvn package'
            sh 'docker build -t FINAL_X_1:${env.BUILD_ID} .'
            sh """
              docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
              docker tag ${DOCKERHUB_REPO_NAME}:${env.BUILD_ID}
              docker push ${DOCKERHUB_REPO_NAME}:${env.BUILD_ID}
            """
        }
        stage('TEST') {
            sh 'echo "blabla"'
        }
        stage('RELEASE') {
            sh """
              docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
              docker tag ${DOCKERHUB_REPO_NAME}:latest
              docker push ${DOCKERHUB_REPO_NAME}:latest
            """
        }
        stage('Deploy(legacy)') {
            sh """
                ansible-playbook deploy/war-deploy-playbook.yaml -i deploy/hosts
            """
        }
        stage('DEPLOY (MODERN)') {
            sh """
                kubectl apply -f deploy/k8s-deployment.yaml
            """
        }


    }
    post {
        success {
            mail to: 'team@example.com',
                    subject: "passed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Something is OK with ${env.BUILD_URL}"
        }
        failure {
            // notify users when the Pipeline fails
            mail to: 'team@example.com',
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Something is wrong with ${env.BUILD_URL}"
        }
    }
}
